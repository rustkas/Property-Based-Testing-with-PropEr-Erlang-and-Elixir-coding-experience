rfc_record_per_line_test() ->
    Expected = ["aaa", "bbb", "ccc"],
	
    Text = "aaa,bbb,ccc\r\nzzz,yyy,xxx\r\n",
    HeaderList = get_header_list(Text),
	
	Result = HeaderList,
	?assertEqual(Expected, Result).
	%?debugFmt("~p~n",[Result]).
	
rfc_optional_trailing_crlf_test() ->
    Expected = ["aaa", "bbb", "ccc"],
    Text = "aaa,bbb,ccc\r\nzzz,yyy,xxx",
	HeaderList = get_header_list(Text),
	
	Result = HeaderList,
	?assertEqual(Expected, Result).

rfc_double_quote_test() ->
    Expected = ["aaa","bbb","ccc"],
    Text = "\"aaa\",\"bbb\",\"ccc\"\r\nzzz,yyy,xxx",
    HeaderList = get_header_list(Text),
	
	Result = HeaderList,
	?assertEqual(Expected, Result).

rfc_crlf_escape_test() ->
	Expected = ["aaa","b\r\nbb","ccc"],
    Text = "\"aaa\",\"b\r\nbb\",\"ccc\"\r\nzzz,yyy,xxx",
    HeaderList = get_header_list(Text),
	
	Result = HeaderList,
	?assertEqual(Expected, Result).

rfc_double_quote_escape_test() ->
    Expected = ["aaa","b\"bb","ccc"],
    %% Since we decided headers are mandatory, this test adds a line
    %% with empty values (CLRF,,) to the example from the RFC.
    Text = "\"aaa\",\"b\"\"bb\",\"ccc\"\r\n,,",
	HeaderList = get_header_list(Text),
	
	Result = HeaderList,
	?assertEqual(Expected, Result).
	
dupe_keys_test() ->
    Expected = ["field_name","field_name","field_name"],
	CSV = "field_name,field_name,field_name\r\n"
          "aaa,bbb,ccc\r\n"
          "zzz,yyy,xxx\r\n",
	Text = CSV,	  
	HeaderList = get_header_list(Text),
    
	Result = HeaderList,
	?assertEqual(Expected, Result).

	
%% =========================================================================	
%% Helper
%%
get_header_list(Text)->
TunedText = tune_string(Text),
	SplittedText = split_text(TunedText),
	SplitMP = build_split_rows_mp(),
	RemoveUselessDoubleQuoteMP = build_remove_double_quote_mp(),
	
    HeaderList = get_header(SplittedText,SplitMP,RemoveUselessDoubleQuoteMP),
	HeaderList.
	