get_keys_01_emulation_test() ->
    Expected = "aaa,bbb,ccc",
    DeepTupleList =
        [[{"aaa", "zzz"}, {"bbb", "yyy"}, {"ccc", "xxx"}],
         [{"aaa", "zzz"}, {"bbb", "yyy"}, {"ccc", "xxx"}]],

    FirstList = hd(DeepTupleList),
    Keys = lists:map(fun(Elem) -> element(1, Elem) end, FirstList),
    JoinedList = lists:join(",", Keys),
    KeysString = lists:flatten(JoinedList),

    ?assertEqual(["aaa", "bbb", "ccc"], Keys),
    ?assertEqual(Expected, KeysString).

get_keys_02_test() ->
    Expected = "aaa,bbb,ccc",
    DeepTupleList =
        [[{"aaa", "zzz"}, {"bbb", "yyy"}, {"ccc", "xxx"}],
         [{"aaa", "zzz"}, {"bbb", "yyy"}, {"ccc", "xxx"}]],

    KeysString = get_csv_keys(DeepTupleList),

    ?assertEqual(Expected, KeysString).

get_keys_03_test() ->
    Expected = "B,A",
    DeepTupleList = [[{"B", []}, {"A", []}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assertEqual(Expected, KeysString).

get_keys_04_test() ->
    Expected = "A,0",
    DeepTupleList = [[{"A", "v"}, {"0", "^"}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assertEqual(Expected, KeysString).

get_keys_05_test() ->
    Expected = "A,C",
    DeepTupleList = [[{"A", []}, {"C", "N"}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assertEqual(Expected, KeysString).

get_keys_06_test() ->
    Expected = "A,C",
    DeepTupleList = [[{[65], []}, {[67], []}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assertEqual(Expected, KeysString).

get_keys_07_test() ->
    Expected = "B,A",
    DeepTupleList = [[{[66], []}, {[65], []}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assertEqual(Expected, KeysString).

get_keys_08_test() ->
    DeepTupleList =
        [[{"&", "REr-fFHu"}, {"O Bcx", "/O97f`-"}],
         [{"&", "RC46{y<&X"}, {"O Bcx", "{_M^ Wv"}],
         [{"&", "zo~,3Na**"}, {"O Bcx", "grKuGkv(Q?"}],
         [{"&", ")"}, {"O Bcx", "w d"}],
         [{"&", "1SOI3"}, {"O Bcx", "7LE^r<."}],
         [{"&", []}, {"O Bcx", "gm6}+r/9"}],
         [{"&", "F"}, {"O Bcx", "?Np@"}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assert(is_list(KeysString)).

get_keys_09_test() ->
    DeepTupleList = [[{" B2@be1Y\\", "(e?Q"}, {"SB)F", "@\n2'\\H=eD`"}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assert(is_list(KeysString)).

get_keys_10_test() ->
    DeepTupleList =
        [[{",nEj/TZ", "wXRIN !F)"}, {[], "IPx/szi"}],
         [{",nEj/TZ", "SHO~fx=DD$"}, {[], "SDG9k\r"}],
         [{",nEj/TZ", "X<DOm="}, {[], []}],
         [{",nEj/TZ", "K%niRQ"}, {[], "U>pM&ttaU"}],
         [{",nEj/TZ", "-nf-"}, {[], "2^sL%;"}],
         [{",nEj/TZ", "x1<(,XAa&"}, {[], "7Je"}],
         [{",nEj/TZ", "mflXc"}, {[], "mO"}],
         [{",nEj/TZ", "(J#Nk\nU"}, {[], []}],
         [{",nEj/TZ", []}, {[], "[V6| F\\%"}],
         [{",nEj/TZ", []}, {[], "I"}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assert(is_list(KeysString)).

get_keys_11_test() ->
    DeepTupleList = [[{[], []}, {[], [34]}]],
    KeysString = get_csv_keys(DeepTupleList),
    ?assert(is_list(KeysString)).
